<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xmlns:aop="http://www.springframework.org/scheme/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-4.3.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
>

<!-- 단순하게는 java. <jsp:useBean>태그와 비슷. -->
<!-- <bean id="day" class="java.util.Date"/> Date day = new Date(); 즉 자바의 객체생성 태그. id가 참조변수 

<bean id="day2" class="java.util.Date">
	<constructor-arg value="2020"/>	<constructor-arg>가 매개변수 하나의 역할
	<constructor-arg value="4"/>
	<constructor-arg value="28"/>
</bean>
 -->
 	<!-- TestDTO dto1 = new TestDTO(); -->
<!-- 	<bean id="dto1" class="test.spring.model.TestDTO"/>
	
	
	TestDTO dto2 = new TestDTO("java");
	<bean id="dto2" class="test.spring.model.TestDTO">
		<constructor-arg value="java"/>
	</bean>
	
	TestDTO dto3 = new TestDTO("java", "1234");
	<bean id="dto3" class="test.spring.model.TestDTO">
		<constructor-arg value="java"/> 
		<constructor-arg value="1234"/>
		기본형 변수는 value에 넣으면 알아서 맞춰 넣어줌. 굳이 데이터타입을 적어주지 않아도 됨. 순서는 맞춰서.
	</bean>
	
	<bean id="day" class="java.util.Date"/>
	
	<bean id="dto4" class="test.spring.model.TestDTO">
		<constructor-arg value="java"/>
		<constructor-arg value="1234"/>
		<constructor-arg ref="day"/> 
					reference : 참조하겠다는 의미로 위에 선언한 day를 가리킴
	</bean>
	
	<bean id="dto5" class="test.spring.model.TestDTO">
		<property name="id" value="korea"/> set메서드 호출 즉, setId()호출
		<property name="day" ref="day"/>  set메서드 호출 즉, setDay()호출
	</bean> -->
<!-- 	<bean id="dao" class="test.spring.model.TestDAO"/> DAO객체생성	 -->
	

	<bean id="filedao" class="test.spring.model.FileDAO"/> <!-- FileDAO 객체생성 -->	
	
	<bean id="filedto" class="test.spring.model.FileDTO"/> <!-- FileDTO 객체생성 -->

	<bean id="memberDAO" class="test.spring.bean.MemberDAO">
		<constructor-arg ref="sqlSession"/> <!-- DAO 생성자 받아 실행 -->
	</bean>
	
	<!-- 쪽지 -->
	<bean id="msgDAO" class="test.spring.bean.MsgDAO">
		<property name="sqlSession" ref="sqlSession"/>
	</bean>
	
	<!-- 채팅 -->
	<bean id="vertxSample" class="com.spring.vertx.controller.VertxSample"/>
		
		<!-- test.spring.model을 스캔해서 @(언노테이션)이 있는 클래스들을 연결해줌. bean.java들이 실행되겠지? -->
		<context:component-scan base-package="test.spring.model"/> 
		
		<!-- <context:component-scan base-package="test.spring.test"/> 
		<context:component-scan base-package="test.spring.action"/>
		<context:component-scan base-package="test.spring.*"/> --> 
		 
</beans>